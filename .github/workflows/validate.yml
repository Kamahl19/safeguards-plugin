name: Validate

on:
  pull_request:
    branches: [ master ]

env:
  SLS_IGNORE_WARNING: 1
  FORCE_COLOR: 1

jobs:
  linuxNode14:
    name: '[Linux] Node.js 14: Lint, Formatting, Eventual Changelog & Unit tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Retrieve last master commit (for `git diff` purposes)
        run: |
          git checkout -b pr
          git fetch --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
          git checkout master
          git checkout pr
      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v14-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**package*.json') }}
          restore-keys: |
            npm-v14-${{ runner.os }}-${{ github.ref }}-
            npm-v14-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v14-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v14-${{ runner.os }}-${{ github.ref }}-
            node-modules-v14-${{ runner.os }}-refs/heads/master-
      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Validate formatting
        run: npm run prettier-check:updated
      - name: Validate lint rules
        run: npm run lint:updated
      - name: Unit tests
        run: npm test -- -b
  windowsNode14:
    name: '[Windows] Node.js v14: Unit tests'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v14-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**package*.json') }}
          restore-keys: |
            npm-v14-${{ runner.os }}-${{ github.ref }}-
            npm-v14-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v14-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v14-${{ runner.os }}-${{ github.ref }}-
            node-modules-v14-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Unit tests
        run: npm test -- -b

  linuxNode12:
    name: '[Linux] Node.js 12: Unit tests with coverage'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v12-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**package*.json') }}
          restore-keys: |
            npm-v12-${{ runner.os }}-${{ github.ref }}-
            npm-v12-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v12-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v12-${{ runner.os }}-${{ github.ref }}-
            node-modules-v12-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Unit tests
        run: npm run cover

  linuxNode10:
    name: '[Linux] Node.js v10: Isolated unit tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v10-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**package*.json') }}
          restore-keys: |
            npm-v10-${{ runner.os }}-${{ github.ref }}-
            npm-v10-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v10-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v10-${{ runner.os }}-${{ github.ref }}-
            node-modules-v10-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Unit tests (isolated)
        run: npm run test:isolated -- -b

  linuxNode8:
    name: '[Linux] Node.js v8: Unit & packaging tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v8-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**package*.json') }}
          restore-keys: |
            npm-v8-${{ runner.os }}-${{ github.ref }}-
            npm-v8-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v8-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v8-${{ runner.os }}-${{ github.ref }}-
            node-modules-v8-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 8.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Unit tests
        run: npm test -- --require "@babel/register" -b

  linuxNode6:
    name: '[Linux] Node.js v6: Unit tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v6-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**package*.json') }}
          restore-keys: |
            npm-v6-${{ runner.os }}-${{ github.ref }}-
            npm-v6-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v6-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v6-${{ runner.os }}-${{ github.ref }}-
            node-modules-v6-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 6.x

      - name: Install dependencies
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Unit tests
        run: npm test -- --require "@babel/register" -b
